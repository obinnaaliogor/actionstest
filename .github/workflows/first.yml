name: Terraform vpc workflow
on: 
  - push
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #Means get the accesskey and secretaccess key from "secrets" 
  # Where it is saved in your repo.
  #The way the env is passed means it covers for the entire workflow "Global variable", you can also decide to add it directly at the plan level.
jobs:
  Terraform-workflow:
    runs-on: ubuntu-latest
    needs: ["sonarcloud"]
    steps:
    - name: Checkout 
      uses: actions/checkout@v1 #This will copy our code into the runner
    - name: Set Terraform 
      uses: hashicorp/setup-terraform@v2 #This will install terraform into the runner
      with: 
        terraform_version: 1.1.9 #Version of Terraform that the runner will install
    - name: Running Terraform command (Terraform init)
      run: terraform init
    - name: Terraform Validating
      run: terraform validate #Checking for consistency in the code.
    - name: Terraform Formating #Checking of the syntax
      run: terraform fmt
    - name: Terraform Planning 
      run: terraform plan #Credentails are needed for terraform to perform this action
    #- name: Terraform Apply Auto 
     # run: terraform apply -auto-approve #You can add a condition here that only on a PR can this run.
    #- name: Terraform Destroy  
      #run: terraform destroy -auto-approve
  sonarcloud:
      runs-on: ubuntu-latest
      steps:
      - name: Sonarcloud scan
        uses: actions/checkout@v2
        with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUBPAT_TOKEN: ${{ secrets.GITHUBPAT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#adding tag for a release